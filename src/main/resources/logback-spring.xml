<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <!-- Properties -->
    <property name="LOG_HOME" value="${LOG_PATH:-./logs}"/>
    <property name="LOG_FILE" value="${LOG_FILE:-application.log}"/>
    <property name="LOG_LEVEL" value="${LOG_LEVEL:-INFO}"/>
    <property name="MAX_FILE_SIZE" value="${MAX_FILE_SIZE:-10MB}"/>
    <property name="MAX_HISTORY" value="${MAX_HISTORY:-30}"/>
    <property name="TOTAL_SIZE_CAP" value="${TOTAL_SIZE_CAP:-3GB}"/>

    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} [%thread] %-5level %logger{36} - %msg %n%ex"/>

    <property name="ASYNC_QUEUE_SIZE" value="2048"/>
    <property name="ASYNC_DISCARDING_THRESHOLD" value="20"/>
    <property name="ASYNC_NEVER_BLOCK" value="true"/>

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- Loggers -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.apache.kafka" level="WARN"/>
    <logger name="com.example.drone" level="${LOG_LEVEL}"/>

    <!-- Dev Profile -->
    <springProfile name="dev">
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/${LOG_FILE}</file>
            <encoder>
                <pattern>${LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_HOME}/${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
                <maxHistory>${MAX_HISTORY}</maxHistory>
                <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
            </rollingPolicy>
        </appender>

        <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="FILE"/>
            <queueSize>${ASYNC_QUEUE_SIZE}</queueSize>
            <discardingThreshold>${ASYNC_DISCARDING_THRESHOLD}</discardingThreshold>
            <neverBlock>${ASYNC_NEVER_BLOCK}</neverBlock>
        </appender>

        <root level="DEBUG">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </root>

        <logger name="org.springframework.kafka" level="DEBUG"/>
        <logger name="org.apache.kafka" level="INFO"/>
    </springProfile>

    <!-- Test Profile -->
    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <!-- Production Profile -->
    <springProfile name="prod">
        <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/application.json</file>
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <includeMdcKeyName>traceId</includeMdcKeyName>
                <includeMdcKeyName>spanId</includeMdcKeyName>
                <includeContext>true</includeContext>
                <includeTags>true</includeTags>
                <fieldNames>
                    <timestamp>timestamp</timestamp>
                    <version>version</version>
                    <message>message</message>
                    <logger>logger</logger>
                    <thread>thread</thread>
                    <level>level</level>
                    <levelValue>levelValue</levelValue>
                </fieldNames>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_HOME}/application.json.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
                <maxHistory>${MAX_HISTORY}</maxHistory>
                <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
            </rollingPolicy>
        </appender>

        <appender name="ASYNC_JSON_FILE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="JSON_FILE"/>
            <queueSize>${ASYNC_QUEUE_SIZE}</queueSize>
            <discardingThreshold>${ASYNC_DISCARDING_THRESHOLD}</discardingThreshold>
            <neverBlock>${ASYNC_NEVER_BLOCK}</neverBlock>
        </appender>

        <root level="WARN">
            <appender-ref ref="ASYNC_JSON_FILE"/>
        </root>

        <logger name="com.example.drone" level="INFO" additivity="false">
            <appender-ref ref="ASYNC_JSON_FILE"/>
        </logger>
        <logger name="org.springframework.web" level="WARN"/>
        <logger name="org.springframework.kafka" level="INFO"/>
        <logger name="org.apache.kafka" level="WARN"/>
    </springProfile>

    <!-- Default Profile -->
    <springProfile name="!dev &amp; !test &amp; !prod">
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/${LOG_FILE}</file>
            <encoder>
                <pattern>${LOG_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_HOME}/${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
                <maxHistory>${MAX_HISTORY}</maxHistory>
                <totalSizeCap>${TOTAL_SIZE_CAP}</totalSizeCap>
            </rollingPolicy>
        </appender>

        <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="FILE"/>
            <queueSize>${ASYNC_QUEUE_SIZE}</queueSize>
            <discardingThreshold>${ASYNC_DISCARDING_THRESHOLD}</discardingThreshold>
            <neverBlock>${ASYNC_NEVER_BLOCK}</neverBlock>
        </appender>

        <root level="${LOG_LEVEL}">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </root>
    </springProfile>
</configuration>
